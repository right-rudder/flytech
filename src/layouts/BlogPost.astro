---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import BaseLayout from "./BaseLayout.astro";
import { KEYWORDS } from "../consts";
import BlogPostSchema from "../components/BlogPostSchema.astro";
import CTAVideoWhite from "../components/CTAVideoWhite.astro";
import videoList from "../data/videos.js";

const randomVideo = videoList[Math.floor(Math.random() * videoList.length)];
const dataForVideo = {
  header: `<span class="text-primary-600 uppercase text-lg lg:text-2xl lg:max-w-3xl font-sans text-center font-bold tracking-tight">Fly with the team thatâ€™s</br></span>revolutionizing pilot training`,
  title:
    "At FlyTech Pilot Academy, we combine modern aircraft, immersive technology, and a passionate team of instructors to give you an efficient, professional, and enjoyable path to the cockpit. Whether you're starting fresh or advancing your career, we make it simple.",
  buttons: [
    {
      name: "START FLYING TODAY",
      link: "#",
      primary: true,
    },
  ],
};

type Props = CollectionEntry<"blog">["data"];
const {
  title,
  author,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  tags,
  keywords,
} = Astro.props;
---

<BaseLayout
  siteTitle={title + " | FlyTech Flight School Blog"}
  siteDescription={description}
  keywords={category + ", " + tags.join(", ") + keywords ? keywords : KEYWORDS}
  ogImage={heroImage}
>
  <section
    class="flex pt-20 justify-center bg-gradient-to-b from-neutral-900 to-neutral-800"
  >
    <article class="mx-auto max-w-4xl my-12">
      <div
        class="mb-12 lg:mb-0 aspect-square lg:aspect-video lg:rounded-t-md shadow-md overflow-hidden"
      >
        {
          heroImage && (
            <img
              class="object-cover h-full w-full bg-white"
              src={heroImage}
              alt={title}
            />
          )
        }
      </div>
      <div class="mx-auto max-w-6xl bg-white prose font-sans pt-12 pb-32 px-5">
        <div class="title">
          <div class="date animate-fade-bottom">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
          <h1
            class="text-6xl leading-[3.5rem] m-0 font-title font-bold animate-fade-top text-primary-700 uppercase"
          >
            {title}
          </h1>
          <p class="text-sm font-light animate-fade-top">Published by:</p>
          <p class="-mt-5 text-base font-medium animate-fade-bottom">
            {author}
          </p>
          <div class="md:flex gap-2 hidden">
            <span
              class="bg-primary-600 text-white inline-block px-3 py-1 rounded-md"
            >
              {category}
            </span>
            {
              tags
                .slice(0, 3)
                .map((tag, index) => (
                  <span
                    class={`bg-teal-500 text-white capitalize inline-block px-3 py-1 rounded-md`}
                  >
                    {tag}
                  </span>
                ))
            }
          </div>
          <hr />
        </div>
        <div
          class="flex relative justify-center prose-a:text-primary-500 prose-a:font-semibold hover:prose-a:text-amber-400 prose-a:transition-colors prose-a:duration-200"
        >
          <slot />
        </div>
      </div>
    </article>
  </section>

  <CTAVideoWhite video={randomVideo} data={dataForVideo} />
  <!-- Add BlogPost Schema for SEO -->
  <BlogPostSchema
    title={title}
    description={description}
    publishDate={pubDate}
    updateDate={updatedDate}
    authorName={author}
    featuredImage={heroImage}
    tags={tags}
    section={category}
  />
</BaseLayout>
